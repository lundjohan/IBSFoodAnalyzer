// Generated by Dagger (https://google.github.io/dagger).
package com.johanlund.screens.event_activities.mvc_controllers;

import com.johanlund.factories.EventFactory;
import dagger.MembersInjector;
import javax.inject.Provider;

public final class NewEventActivity_MembersInjector implements MembersInjector<NewEventActivity> {
  private final Provider<EventFactory> eventFactoryProvider;

  public NewEventActivity_MembersInjector(Provider<EventFactory> eventFactoryProvider) {
    this.eventFactoryProvider = eventFactoryProvider;
  }

  public static MembersInjector<NewEventActivity> create(
      Provider<EventFactory> eventFactoryProvider) {
    return new NewEventActivity_MembersInjector(eventFactoryProvider);
  }

  @Override
  public void injectMembers(NewEventActivity instance) {
    injectEventFactory(instance, eventFactoryProvider.get());
  }

  public static void injectEventFactory(NewEventActivity instance, EventFactory eventFactory) {
    instance.eventFactory = eventFactory;
  }
}
